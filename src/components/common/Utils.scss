// Flexbox
$flexDistributions: (
    "start": flex-start,
    "end": flex-end,
    "between": space-between,
    "around": space-around,
    "evenly": space-evenly,
    "center": center,
);
$alignments: ("justify": "justify-content", "align": "align-items");
.inline { display: inline !important; }
.flex { display: flex !important; }
.flex-col { flex-flow: column; }
.flex-row { flex-flow: row; }
@mixin flexAlignments {
    @each $alignKey, $alignProp in $alignments {
        @each $flexProp, $flexVal in $flexDistributions {
            #{"."}#{$alignKey}-#{$flexProp} {
                #{$alignProp}: $flexVal;
            }
        }
    }
}
@include flexAlignments();
.grow { flex-grow: 1; }
.noShrink { flex-shrink: 0; }
.noWrap { flex-wrap: nowrap; }


// Paddings & Margins
$sizes: (0: 0, 1: 5px, 2: 10px, 3: 15px, 4: 25px, 5: 50px, 6: 100px);

@mixin position-variants($class, $props) {
    @each $key, $unit in $sizes {
        #{$class}-#{$key} {
            @each $prop in $props {
                #{$prop} : $unit !important;
            }
        };
    }
}

@function placement-variants($key, $prop) {
    $variants : (
        #{$key}: [#{$prop}],
        #{$key}t: [#{$prop}-top],
        #{$key}b: [#{$prop}-bottom],
        #{$key}l: [#{$prop}-left],
        #{$key}r: [#{$prop}-right],
        #{$key}y: [#{$prop}-top #{$prop}-bottom],
        #{$key}x: [#{$prop}-left #{$prop}-right],
    );
    @return $variants;
}

@mixin positionPlacementMaker($className, $name) {
    $placementVariants: placement-variants($className, $name);
    @each $class, $props in $placementVariants {
        @include position-variants($class, $props);
    }
}

@include positionPlacementMaker(".p", "padding");
@include positionPlacementMaker(".m", "margin");
.mx-auto {
    margin-left: auto !important;
    margin-right: auto !important;
}
.ml-auto {
    margin-left: auto !important;
}
.mr-auto {
    margin-right: auto !important;
}

// Dimensions
.h-fit {
    height: fit-content;
}
.minH-fit {
    min-height: fit-content;
}
.w-fit {
    width: fit-content;
}
.minW-fit {
    min-width: fit-content;
}
.h-100 {
    height: 100%;
}
.w-100 {
    width: 100%;
}

// Backgrounds
.bg-dark {
    background: var(--ion-color-dark);
}
.bg-light {
    background: var(--ion-color-light);
}
.bg-soft {
    background: var(--ion-color-light-shade);
}
.bg-primary {
    background: var(--ion-color-primay);
}
.bg-success {
    background: var(--ion-color-success);
}
.bg-warning {
    background: var(--ion-color-warning);
}
.bg-danger {
    background: var(--ion-color-danger);
}
